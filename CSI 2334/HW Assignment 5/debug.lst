Microsoft (R) Macro Assembler Version 6.11		    02/19/09 09:26:02
C:\Documents and Settings\Glen\My Documents\CSI\Fry\HW assyment 5\debug.asm  Page 1 - 1


				; Filename:     debug.asm
				; Author:       CFry
				; Course:		CSI 2334
				; Assignment:	Assignment 5A         
				; Helpers:      None
				;
				; This program inputs two numbers, computes their sum, and displays
				; the numbers and the sum on the standard output device (monitor).
				;

				.386
				.MODEL FLAT

				ExitProcess PROTO NEAR32 stdcall, dwExitCode:DWORD

				INCLUDE io.h					    		; header file for input/output
			      C ; IO.H -- header file for I/O macros
			      C ; 32-bit version for flat memory model
			      C ; R. Detmer   last revised 8/2000
			      C .NOLIST     ; turn off listing
			      C .LIST        ; begin listing
			      C 

 = 0000000D			cr      EQU     0dh						; carriage return character
 = 0000000A			Lf      EQU     0ah						; line feed

				.STACK 4096							; reserve 4096-byte stack

 00000000			.DATA
 00000000 45 6E 74 65 72	prompt1 BYTE	"Enter first number:  ",0
	   20 66 69 72 73
	   74 20 6E 75 6D
	   62 65 72 3A 20
	   20 00
 00000016 45 6E 74 65 72	prompt2 BYTE	"Enter second number:  ",0
	   20 73 65 63 6F
	   6E 64 20 6E 75
	   6D 62 65 72 3A
	   20 20 00
 0000002D 0D 0A 54 68 65	label1  BYTE	cr,Lf,"The numbers you entered were ",cr,Lf
	   20 6E 75 6D 62
	   65 72 73 20 79
	   6F 75 20 65 6E
	   74 65 72 65 64
	   20 77 65 72 65
	   20 0D 0A
 0000004E  00000028 [		number1	BYTE	40 DUP(?)
	    00
	   ]
 00000076  0D 0A 20 61 6E		BYTE	cr,Lf," and ",cr,Lf 
	   64 20 0D 0A
 0000007F  00000028 [		number2	BYTE	40 DUP(?)
	    00
	   ]
 000000A7  0D 0A 54 68 65		BYTE	cr,Lf,"The sum is "
	   20 73 75 6D 20
	   69 73 20
 000000B4  0000000B [		sum	BYTE	11 DUP(?)
	    00
	   ]
 000000BF  0D 0A 00		        BYTE	cr,Lf,0
				                                                        
 00000000			.CODE	       							; start of main program code 
 00000000			_start: 					             
				        output  prompt1						; prompt for first number
				        input   number1,40					; read ASCII characters
				      	atod	number1						; convert number1 to a dword
 0000002E  8B D8			mov	ebx,eax						; store the dword (ebx)

				        output  prompt2						; prompt for second number
				        input   number2,40					; read ASCII characters
					atod	number2						; convert number2 to a dword
 0000005E  03 C3			add	eax,ebx						; add the first number to the second
				        
				        dtoa	sum,eax						; convert result to ASCII, store in memory
					output  label1						; output label, numbers, and sum

				        INVOKE  ExitProcess,0					; exit with return code 0

 00000086			PUBLIC _start							; make entry point public

				END								; end of source code
Microsoft (R) Macro Assembler Version 6.11		    02/19/09 09:26:02
C:\Documents and Settings\Glen\My Documents\CSI\Fry\HW assyment 5\debug.asm  Symbols 2 - 1




Macros:

                N a m e                 Type

atod . . . . . . . . . . . . . .	Proc
atoi . . . . . . . . . . . . . .	Proc
dtoa . . . . . . . . . . . . . .	Proc
input  . . . . . . . . . . . . .	Proc
itoa . . . . . . . . . . . . . .	Proc
output . . . . . . . . . . . . .	Proc


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 DWord	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000000C2 DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000086 DWord	  Public  'CODE'	


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

$$$$$$00001  . . . . . . . . . .	P Near	 00000001 _TEXT	Length= 00000085 Private
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000000h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
Lf . . . . . . . . . . . . . . .	Number	 0000000Ah   
_start . . . . . . . . . . . . .	L Near	 00000000 _TEXT	Public
atodproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
atoiproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
cr . . . . . . . . . . . . . . .	Number	 0000000Dh   
dtoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
inproc . . . . . . . . . . . . .	L Near	 00000000 FLAT	External
itoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
label1 . . . . . . . . . . . . .	Byte	 0000002D _DATA	
number1  . . . . . . . . . . . .	Byte	 0000004E _DATA	
number2  . . . . . . . . . . . .	Byte	 0000007F _DATA	
outproc  . . . . . . . . . . . .	L Near	 00000000 FLAT	External
prompt1  . . . . . . . . . . . .	Byte	 00000000 _DATA	
prompt2  . . . . . . . . . . . .	Byte	 00000016 _DATA	
sum  . . . . . . . . . . . . . .	Byte	 000000B4 _DATA	

	   0 Warnings
	   0 Errors
